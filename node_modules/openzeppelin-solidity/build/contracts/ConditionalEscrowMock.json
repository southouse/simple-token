{
  "contractName": "ConditionalEscrowMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimaryTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        },
        {
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16108ac806100d76000396000f3fe60806040526004361061008d576000357c010000000000000000000000000000000000000000000000000000000090048063685ca1941161006b578063685ca19414610191578063c6dbdf61146101fa578063e3a9db1a14610251578063f340fa01146102b65761008d565b80632348238c146100925780634697f05d146100e357806351cff8d914610140575b600080fd5b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102fa565b005b3480156100ef57600080fd5b5061013e6004803603604081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610458565b005b34801561014c57600080fd5b5061018f6004803603602081101561016357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104b3565b005b34801561019d57600080fd5b506101e0600480360360208110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d3565b604051808215151515815260200191505060405180910390f35b34801561020657600080fd5b5061020f610529565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025d57600080fd5b506102a06004803603602081101561027457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610552565b6040518082815260200191505060405180910390f35b6102f8600480360360208110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059b565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561039157600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6104bc816104d3565b15156104c757600080fd5b6104d0816106e2565b50565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105f657600080fd5b600034905061064d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461085f90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561073d57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561080c573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b600080828401905083811015151561087657600080fd5b809150509291505056fea165627a7a7230582007bdb8e84d4a9a81ae35cc74616f3434a4a2e661919e1223fd103982e58dbc320029",
  "deployedBytecode": "0x60806040526004361061008d576000357c010000000000000000000000000000000000000000000000000000000090048063685ca1941161006b578063685ca19414610191578063c6dbdf61146101fa578063e3a9db1a14610251578063f340fa01146102b65761008d565b80632348238c146100925780634697f05d146100e357806351cff8d914610140575b600080fd5b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102fa565b005b3480156100ef57600080fd5b5061013e6004803603604081101561010657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610458565b005b34801561014c57600080fd5b5061018f6004803603602081101561016357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104b3565b005b34801561019d57600080fd5b506101e0600480360360208110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d3565b604051808215151515815260200191505060405180910390f35b34801561020657600080fd5b5061020f610529565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025d57600080fd5b506102a06004803603602081101561027457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610552565b6040518082815260200191505060405180910390f35b6102f8600480360360208110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061059b565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561039157600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6104bc816104d3565b15156104c757600080fd5b6104d0816106e2565b50565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105f657600080fd5b600034905061064d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461085f90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561073d57600080fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561080c573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b600080828401905083811015151561087657600080fd5b809150509291505056fea165627a7a7230582007bdb8e84d4a9a81ae35cc74616f3434a4a2e661919e1223fd103982e58dbc320029",
  "sourceMap": "114:320:43:-;;;418:10:95;407:8;;:21;;;;;;;;;;;;;;;;;;443:28;462:8;;;;;;;;;;;443:28;;;;;;;;;;;;;;;;;;;;;;114:320:43;;;;;;",
  "deployedSourceMap": "114:320:43:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:185:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;922:185:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;922:185:95;;;;;;;;;;;;;;;;;;;:::i;:::-;;220:98:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:98:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;220:98:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;550:129:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:129:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;550:129:98;;;;;;;;;;;;;;;;;;;:::i;:::-;;324:108:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;324:108:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;324:108:43;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;718:81:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;718:81:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;993:105:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;993:105:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;993:105:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1240:199;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1240:199:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;922:185:95;626:8;;;;;;;;;;;612:22;;:10;:22;;;604:31;;;;;;;;1024:1;1003:23;;:9;:23;;;;995:32;;;;;;;;1048:9;1037:8;;:20;;;;;;;;;;;;;;;;;;1072:28;1091:8;;;;;;;;;;;1072:28;;;;;;;;;;;;;;;;;;;;;;922:185;:::o;220:98:43:-;304:7;286:8;:15;295:5;286:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;220:98;;:::o;550:129:98:-;616:24;634:5;616:17;:24::i;:::-;608:33;;;;;;;;651:21;666:5;651:14;:21::i;:::-;550:129;:::o;324:108:43:-;387:4;410:8;:15;419:5;410:15;;;;;;;;;;;;;;;;;;;;;;;;;403:22;;324:108;;;:::o;718:81:95:-;758:7;784:8;;;;;;;;;;;777:15;;718:81;:::o;993:105:99:-;1049:7;1075:9;:16;1085:5;1075:16;;;;;;;;;;;;;;;;1068:23;;993:105;;;:::o;1240:199::-;626:8:95;;;;;;;;;;;612:22;;:10;:22;;;604:31;;;;;;;;1309:14:99;1326:9;1309:26;;1364:28;1385:6;1364:9;:16;1374:5;1364:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;1345:9;:16;1355:5;1345:16;;;;;;;;;;;;;;;:47;;;;1418:5;1408:24;;;1425:6;1408:24;;;;;;;;;;;;;;;;;;645:1:95;1240:199:99;:::o;1597:217::-;626:8:95;;;;;;;;;;;612:22;;:10;:22;;;604:31;;;;;;;;1667:15:99;1685:9;:16;1695:5;1685:16;;;;;;;;;;;;;;;;1667:34;;1731:1;1712:9;:16;1722:5;1712:16;;;;;;;;;;;;;;;:20;;;;1743:5;:14;;:23;1758:7;1743:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1743:23:99;1792:5;1782:25;;;1799:7;1782:25;;;;;;;;;;;;;;;;;;645:1:95;1597:217:99;:::o;1439:145:36:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"../payment/escrow/ConditionalEscrow.sol\";\n\n// mock class using ConditionalEscrow\ncontract ConditionalEscrowMock is ConditionalEscrow {\n    mapping(address => bool) private _allowed;\n\n    function setAllowed(address payee, bool allowed) public {\n        _allowed[payee] = allowed;\n    }\n\n    function withdrawalAllowed(address payee) public view returns (bool) {\n        return _allowed[payee];\n    }\n}\n",
  "sourcePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/ConditionalEscrowMock.sol",
  "ast": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/ConditionalEscrowMock.sol",
    "exportedSymbols": {
      "ConditionalEscrowMock": [
        4161
      ]
    },
    "id": 4162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4127,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/payment/escrow/ConditionalEscrow.sol",
        "file": "../payment/escrow/ConditionalEscrow.sol",
        "id": 4128,
        "nodeType": "ImportDirective",
        "scope": 4162,
        "sourceUnit": 7106,
        "src": "25:49:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4129,
              "name": "ConditionalEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7105,
              "src": "148:17:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConditionalEscrow_$7105",
                "typeString": "contract ConditionalEscrow"
              }
            },
            "id": 4130,
            "nodeType": "InheritanceSpecifier",
            "src": "148:17:43"
          }
        ],
        "contractDependencies": [
          6735,
          7105,
          7203
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4161,
        "linearizedBaseContracts": [
          4161,
          7105,
          7203,
          6735
        ],
        "name": "ConditionalEscrowMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4134,
            "name": "_allowed",
            "nodeType": "VariableDeclaration",
            "scope": 4161,
            "src": "172:41:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4133,
              "keyType": {
                "id": 4131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "180:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "172:24:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4132,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "191:4:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4147,
              "nodeType": "Block",
              "src": "276:42:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4141,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4134,
                        "src": "286:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4143,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4142,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4136,
                        "src": "295:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "286:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4144,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4138,
                      "src": "304:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "286:25:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4146,
                  "nodeType": "ExpressionStatement",
                  "src": "286:25:43"
                }
              ]
            },
            "documentation": null,
            "id": 4148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4136,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4148,
                  "src": "240:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4138,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4148,
                  "src": "255:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "239:29:43"
            },
            "returnParameters": {
              "id": 4140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:0:43"
            },
            "scope": 4161,
            "src": "220:98:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4159,
              "nodeType": "Block",
              "src": "393:39:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4155,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4134,
                      "src": "410:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4157,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4156,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4150,
                      "src": "419:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "410:15:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4154,
                  "id": 4158,
                  "nodeType": "Return",
                  "src": "403:22:43"
                }
              ]
            },
            "documentation": null,
            "id": 4160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4150,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4160,
                  "src": "351:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:15:43"
            },
            "returnParameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4160,
                  "src": "387:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "386:6:43"
            },
            "scope": 4161,
            "src": "324:108:43",
            "stateMutability": "view",
            "superFunction": 7086,
            "visibility": "public"
          }
        ],
        "scope": 4162,
        "src": "114:320:43"
      }
    ],
    "src": "0:435:43"
  },
  "legacyAST": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/ConditionalEscrowMock.sol",
    "exportedSymbols": {
      "ConditionalEscrowMock": [
        4161
      ]
    },
    "id": 4162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4127,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/payment/escrow/ConditionalEscrow.sol",
        "file": "../payment/escrow/ConditionalEscrow.sol",
        "id": 4128,
        "nodeType": "ImportDirective",
        "scope": 4162,
        "sourceUnit": 7106,
        "src": "25:49:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4129,
              "name": "ConditionalEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7105,
              "src": "148:17:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConditionalEscrow_$7105",
                "typeString": "contract ConditionalEscrow"
              }
            },
            "id": 4130,
            "nodeType": "InheritanceSpecifier",
            "src": "148:17:43"
          }
        ],
        "contractDependencies": [
          6735,
          7105,
          7203
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4161,
        "linearizedBaseContracts": [
          4161,
          7105,
          7203,
          6735
        ],
        "name": "ConditionalEscrowMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4134,
            "name": "_allowed",
            "nodeType": "VariableDeclaration",
            "scope": 4161,
            "src": "172:41:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4133,
              "keyType": {
                "id": 4131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "180:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "172:24:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4132,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "191:4:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4147,
              "nodeType": "Block",
              "src": "276:42:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4141,
                        "name": "_allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4134,
                        "src": "286:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4143,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4142,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4136,
                        "src": "295:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "286:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4144,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4138,
                      "src": "304:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "286:25:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4146,
                  "nodeType": "ExpressionStatement",
                  "src": "286:25:43"
                }
              ]
            },
            "documentation": null,
            "id": 4148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4136,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4148,
                  "src": "240:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4138,
                  "name": "allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4148,
                  "src": "255:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "239:29:43"
            },
            "returnParameters": {
              "id": 4140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:0:43"
            },
            "scope": 4161,
            "src": "220:98:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4159,
              "nodeType": "Block",
              "src": "393:39:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4155,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4134,
                      "src": "410:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4157,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4156,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4150,
                      "src": "419:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "410:15:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4154,
                  "id": 4158,
                  "nodeType": "Return",
                  "src": "403:22:43"
                }
              ]
            },
            "documentation": null,
            "id": 4160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4150,
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 4160,
                  "src": "351:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:15:43"
            },
            "returnParameters": {
              "id": 4154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4160,
                  "src": "387:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "386:6:43"
            },
            "scope": 4161,
            "src": "324:108:43",
            "stateMutability": "view",
            "superFunction": 7086,
            "visibility": "public"
          }
        ],
        "scope": 4162,
        "src": "114:320:43"
      }
    ],
    "src": "0:435:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-02-25T17:39:18.809Z",
  "devdoc": {
    "methods": {
      "deposit(address)": {
        "details": "Stores the sent amount as credit to be withdrawn.",
        "params": {
          "payee": "The destination address of the funds."
        }
      },
      "primary()": {
        "return": "the address of the primary."
      },
      "transferPrimary(address)": {
        "details": "Transfers contract to a new primary.",
        "params": {
          "recipient": "The address of new primary."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}