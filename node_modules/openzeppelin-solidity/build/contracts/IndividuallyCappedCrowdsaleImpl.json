{
  "contractName": "IndividuallyCappedCrowdsaleImpl",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "getContribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isCapper",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeCapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceCapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "setCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addCapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "getCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onlyCapperMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "CapperAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "CapperRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405160608061115e8339810180604052606081101561003057600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050828282600160008190555060008311151561006f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156100ab57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100e757600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061018b33610193640100000000026401000000009004565b50505061034d565b6101b48160056101fa64010000000002610b89179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167fa7555c95b69d4f5cc847881feb4ab2883a1921319e34fa2043747b793d65b36e60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561023657600080fd5b61024f82826102b9640100000000026401000000009004565b15151561025b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156102f657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610e028061035c6000396000f3fe6080604052600436106100df576000357c0100000000000000000000000000000000000000000000000000000000900480635d5576f81161009c578063b3aefb7511610076578063b3aefb7514610379578063d1e07bcb146103de578063ec8ac4d8146103f5578063fc0c546a14610439576100df565b80635d5576f8146102b657806380ad2cf3146102cd5780638dfbcf3614610328576100df565b806321eff7fc146100ea5780632c4e722e1461014f578063395645611461017a5780633f4a6484146101e35780634042b66f14610234578063521eb2731461025f575b6100e833610490565b005b3480156100f657600080fd5b506101396004803603602081101561010d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610586565b6040518082815260200191505060405180910390f35b34801561015b57600080fd5b506101646105cf565b6040518082815260200191505060405180910390f35b34801561018657600080fd5b506101c96004803603602081101561019d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d9565b604051808215151515815260200191505060405180910390f35b3480156101ef57600080fd5b506102326004803603602081101561020657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f6565b005b34801561024057600080fd5b50610249610602565b6040518082815260200191505060405180910390f35b34801561026b57600080fd5b5061027461060c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c257600080fd5b506102cb610636565b005b3480156102d957600080fd5b50610326600480360360408110156102f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610641565b005b34801561033457600080fd5b506103776004803603602081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061069d565b005b34801561038557600080fd5b506103c86004803603602081101561039c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106bd565b6040518082815260200191505060405180910390f35b3480156103ea57600080fd5b506103f3610706565b005b6104376004803603602081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b005b34801561044557600080fd5b5061044e61071c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600080828254019250508190555060008054905060003490506104b58382610746565b60006104c0826107f3565b90506104d78260045461081190919063ffffffff16565b6004819055506104e78482610832565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361055e8483610840565b6105666108e3565b610570848361094e565b50506000548114151561058257600080fd5b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b60006105ef82600561095290919063ffffffff16565b9050919050565b6105ff816109e6565b50565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61063f336109e6565b565b61064a336105d9565b151561065557600080fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6106a6336105d9565b15156106b157600080fd5b6106ba816109f2565b50565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61070f336105d9565b151561071a57600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107508282610a4c565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107e282600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461081190919063ffffffff16565b111515156107ef57600080fd5b5050565b600061080a60035483610a9c90919063ffffffff16565b9050919050565b600080828401905083811015151561082857600080fd5b8091505092915050565b61083c8282610ada565b5050565b61084a8282610b2b565b61089c81600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461081190919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561094b573d6000803e3d6000fd5b50565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561098f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109ef81610b2f565b50565b610a06816005610b8990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa7555c95b69d4f5cc847881feb4ab2883a1921319e34fa2043747b793d65b36e60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a8857600080fd5b60008114151515610a9857600080fd5b5050565b600080831415610aaf5760009050610ad4565b60008284029050828482811515610ac257fe5b04141515610acf57600080fd5b809150505b92915050565b610b278282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c399092919063ffffffff16565b5050565b5050565b610b43816005610d2790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f427400d279c506df610224b22ecce89b693fc1865864113f21c8d19c1f0c2a3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610bc557600080fd5b610bcf8282610952565b151515610bdb57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d6020811015610d0657600080fd5b81019080805190602001909291905050501515610d2257600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d6357600080fd5b610d6d8282610952565b1515610d7857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a72305820da32a5609ccfe5e1c87462b71d2e3e20b8465ae42c063ec9ec11795f9e5bd5c80029",
  "deployedBytecode": "0x6080604052600436106100df576000357c0100000000000000000000000000000000000000000000000000000000900480635d5576f81161009c578063b3aefb7511610076578063b3aefb7514610379578063d1e07bcb146103de578063ec8ac4d8146103f5578063fc0c546a14610439576100df565b80635d5576f8146102b657806380ad2cf3146102cd5780638dfbcf3614610328576100df565b806321eff7fc146100ea5780632c4e722e1461014f578063395645611461017a5780633f4a6484146101e35780634042b66f14610234578063521eb2731461025f575b6100e833610490565b005b3480156100f657600080fd5b506101396004803603602081101561010d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610586565b6040518082815260200191505060405180910390f35b34801561015b57600080fd5b506101646105cf565b6040518082815260200191505060405180910390f35b34801561018657600080fd5b506101c96004803603602081101561019d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d9565b604051808215151515815260200191505060405180910390f35b3480156101ef57600080fd5b506102326004803603602081101561020657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f6565b005b34801561024057600080fd5b50610249610602565b6040518082815260200191505060405180910390f35b34801561026b57600080fd5b5061027461060c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c257600080fd5b506102cb610636565b005b3480156102d957600080fd5b50610326600480360360408110156102f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610641565b005b34801561033457600080fd5b506103776004803603602081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061069d565b005b34801561038557600080fd5b506103c86004803603602081101561039c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106bd565b6040518082815260200191505060405180910390f35b3480156103ea57600080fd5b506103f3610706565b005b6104376004803603602081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610490565b005b34801561044557600080fd5b5061044e61071c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600080828254019250508190555060008054905060003490506104b58382610746565b60006104c0826107f3565b90506104d78260045461081190919063ffffffff16565b6004819055506104e78482610832565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361055e8483610840565b6105666108e3565b610570848361094e565b50506000548114151561058257600080fd5b5050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b60006105ef82600561095290919063ffffffff16565b9050919050565b6105ff816109e6565b50565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61063f336109e6565b565b61064a336105d9565b151561065557600080fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6106a6336105d9565b15156106b157600080fd5b6106ba816109f2565b50565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61070f336105d9565b151561071a57600080fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107508282610a4c565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107e282600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461081190919063ffffffff16565b111515156107ef57600080fd5b5050565b600061080a60035483610a9c90919063ffffffff16565b9050919050565b600080828401905083811015151561082857600080fd5b8091505092915050565b61083c8282610ada565b5050565b61084a8282610b2b565b61089c81600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461081190919063ffffffff16565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561094b573d6000803e3d6000fd5b50565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561098f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109ef81610b2f565b50565b610a06816005610b8990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa7555c95b69d4f5cc847881feb4ab2883a1921319e34fa2043747b793d65b36e60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a8857600080fd5b60008114151515610a9857600080fd5b5050565b600080831415610aaf5760009050610ad4565b60008284029050828482811515610ac257fe5b04141515610acf57600080fd5b809150505b92915050565b610b278282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c399092919063ffffffff16565b5050565b5050565b610b43816005610d2790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f427400d279c506df610224b22ecce89b693fc1865864113f21c8d19c1f0c2a3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610bc557600080fd5b610bcf8282610952565b151515610bdb57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d6020811015610d0657600080fd5b81019080805190602001909291905050501515610d2257600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d6357600080fd5b610d6d8282610952565b1515610d7857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fea165627a7a72305820da32a5609ccfe5e1c87462b71d2e3e20b8465ae42c063ec9ec11795f9e5bd5c80029",
  "sourceMap": "159:263:67:-;;;253:167;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:167:67;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;253:167:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;335:4;341:6;349:5;576:1:126;560:13;:17;;;;2380:1:7;2373:4;:8;2365:17;;;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;275:22:1;286:10;275;;;:22;;;:::i;:::-;253:167:67;;;159:263;;685:119:1;741:21;754:7;741:8;:12;;;;;;:21;;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;259:181:0:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;159:263:67:-;;;;;;;",
  "deployedSourceMap": "159:263:67:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:7;2885:10;2875:9;:21::i;:::-;159:263:67;1217:127:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:127:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1217:127:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3286:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3286:75:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;395:107:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;395:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;111:85:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:85:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;111:85:42;;;;;;;;;;;;;;;;;;;:::i;:::-;;3424::7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3114:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;604:75:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:1;;;:::i;:::-;;610:111:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;610:111:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;610:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;508:90:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;508:90:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;913:109:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:109:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;913:109:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;202:113:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;202:113:42;;;:::i;:::-;;3766:603:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;2962:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:126;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:7;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:126;;1102:13;;1086:12;:29;1078:38;;;;;;;;3766:603:7;;:::o;1217:127:16:-;1284:7;1310:14;:27;1325:11;1310:27;;;;;;;;;;;;;;;;1303:34;;1217:127;;;:::o;3286:75:7:-;3323:7;3349:5;;3342:12;;3286:75;:::o;395:107:1:-;451:4;474:21;487:7;474:8;:12;;:21;;;;:::i;:::-;467:28;;395:107;;;:::o;111:85:42:-;167:22;181:7;167:13;:22::i;:::-;111:85;:::o;3424::7:-;3466:7;3492:10;;3485:17;;3424:85;:::o;3114:87::-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;604:75:1:-;647:25;661:10;647:13;:25::i;:::-;604:75::o;610:111:16:-;350:20:1;359:10;350:8;:20::i;:::-;342:29;;;;;;;;711:3:16;690:5;:18;696:11;690:18;;;;;;;;;;;;;;;:24;;;;610:111;;:::o;508:90:1:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;913:109:16:-;971:7;997:5;:18;1003:11;997:18;;;;;;;;;;;;;;;;990:25;;913:109;;;:::o;202:113:42:-;350:20:1;359:10;350:8;:20::i;:::-;342:29;;;;;;;;202:113:42:o;2962:76:7:-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;1554:234:16:-;1648:50;1675:11;1688:9;1648:26;:50::i;:::-;1762:5;:18;1768:11;1762:18;;;;;;;;;;;;;;;;1716:42;1748:9;1716:14;:27;1731:11;1716:27;;;;;;;;;;;;;;;;:31;;:42;;;;:::i;:::-;:64;;1708:73;;;;;;;;1554:234;;:::o;7004:120:7:-;7071:7;7097:20;7111:5;;7097:9;:13;;:20;;;;:::i;:::-;7090:27;;7004:120;;;:::o;1439:145:36:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;6206:134:7:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;1973:232:16:-;2064:52;2093:11;2106:9;2064:28;:52::i;:::-;2156:42;2188:9;2156:14;:27;2171:11;2156:27;;;;;;;;;;;;;;;;:31;;:42;;;;:::i;:::-;2126:14;:27;2141:11;2126:27;;;;;;;;;;;;;;;:72;;;;1973:232;;:::o;7211:78:7:-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:7;7211:78::o;5374:149::-;;;:::o;786:162:0:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;394:94:42:-;453:28;473:7;453:19;:28::i;:::-;394:94;:::o;685:119:1:-;741:21;754:7;741:8;:12;;:21;;;;:::i;:::-;789:7;777:20;;;;;;;;;;;;685:119;:::o;4911:168:7:-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;;;4911:168;;:::o;231:421:36:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;;;:10;607:19;;;;;;;;644:1;637:8;;;231:421;;;;;:::o;5803:137:7:-;5888:45;5908:11;5921;5888:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5803:137;;:::o;6610:145::-;;;:::o;810:127:1:-;869:24;885:7;869:8;:15;;:24;;;;:::i;:::-;922:7;908:22;;;;;;;;;;;;810:127;:::o;259:181:0:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;409:123:108:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:108;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:108;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:108;;;;;;;;;;;;;;;;491:34;;;;;;;;409:123;;;:::o;514:184:0:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"../token/ERC20/IERC20.sol\";\nimport \"../crowdsale/validation/IndividuallyCappedCrowdsale.sol\";\nimport \"./CapperRoleMock.sol\";\n\ncontract IndividuallyCappedCrowdsaleImpl is IndividuallyCappedCrowdsale, CapperRoleMock {\n    constructor (uint256 rate, address payable wallet, IERC20 token) public Crowdsale(rate, wallet, token) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/IndividuallyCappedCrowdsaleImpl.sol",
  "ast": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/IndividuallyCappedCrowdsaleImpl.sol",
    "exportedSymbols": {
      "IndividuallyCappedCrowdsaleImpl": [
        5219
      ]
    },
    "id": 5220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5196,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 5197,
        "nodeType": "ImportDirective",
        "scope": 5220,
        "sourceUnit": 8083,
        "src": "25:35:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "file": "../crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "id": 5198,
        "nodeType": "ImportDirective",
        "scope": 5220,
        "sourceUnit": 1711,
        "src": "61:65:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/CapperRoleMock.sol",
        "file": "./CapperRoleMock.sol",
        "id": 5199,
        "nodeType": "ImportDirective",
        "scope": 5220,
        "sourceUnit": 4126,
        "src": "127:30:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5200,
              "name": "IndividuallyCappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1710,
              "src": "203:27:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndividuallyCappedCrowdsale_$1710",
                "typeString": "contract IndividuallyCappedCrowdsale"
              }
            },
            "id": 5201,
            "nodeType": "InheritanceSpecifier",
            "src": "203:27:67"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5202,
              "name": "CapperRoleMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4125,
              "src": "232:14:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CapperRoleMock_$4125",
                "typeString": "contract CapperRoleMock"
              }
            },
            "id": 5203,
            "nodeType": "InheritanceSpecifier",
            "src": "232:14:67"
          }
        ],
        "contractDependencies": [
          196,
          984,
          1710,
          4125,
          9847
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5219,
        "linearizedBaseContracts": [
          5219,
          4125,
          1710,
          196,
          984,
          9847
        ],
        "name": "IndividuallyCappedCrowdsaleImpl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5217,
              "nodeType": "Block",
              "src": "356:64:67",
              "statements": []
            },
            "documentation": null,
            "id": 5218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5212,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5205,
                    "src": "335:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5213,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5207,
                    "src": "341:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5214,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5209,
                    "src": "349:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8082",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 5215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5211,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 984,
                  "src": "325:9:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$984_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "325:30:67"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5205,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "266:12:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5207,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "280:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:15:67",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5209,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "304:12:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8082",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5208,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8082,
                    "src": "304:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8082",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:52:67"
            },
            "returnParameters": {
              "id": 5216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:67"
            },
            "scope": 5219,
            "src": "253:167:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5220,
        "src": "159:263:67"
      }
    ],
    "src": "0:423:67"
  },
  "legacyAST": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/IndividuallyCappedCrowdsaleImpl.sol",
    "exportedSymbols": {
      "IndividuallyCappedCrowdsaleImpl": [
        5219
      ]
    },
    "id": 5220,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5196,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:67"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "../token/ERC20/IERC20.sol",
        "id": 5197,
        "nodeType": "ImportDirective",
        "scope": 5220,
        "sourceUnit": 8083,
        "src": "25:35:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "file": "../crowdsale/validation/IndividuallyCappedCrowdsale.sol",
        "id": 5198,
        "nodeType": "ImportDirective",
        "scope": 5220,
        "sourceUnit": 1711,
        "src": "61:65:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/CapperRoleMock.sol",
        "file": "./CapperRoleMock.sol",
        "id": 5199,
        "nodeType": "ImportDirective",
        "scope": 5220,
        "sourceUnit": 4126,
        "src": "127:30:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5200,
              "name": "IndividuallyCappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1710,
              "src": "203:27:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndividuallyCappedCrowdsale_$1710",
                "typeString": "contract IndividuallyCappedCrowdsale"
              }
            },
            "id": 5201,
            "nodeType": "InheritanceSpecifier",
            "src": "203:27:67"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5202,
              "name": "CapperRoleMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4125,
              "src": "232:14:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CapperRoleMock_$4125",
                "typeString": "contract CapperRoleMock"
              }
            },
            "id": 5203,
            "nodeType": "InheritanceSpecifier",
            "src": "232:14:67"
          }
        ],
        "contractDependencies": [
          196,
          984,
          1710,
          4125,
          9847
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5219,
        "linearizedBaseContracts": [
          5219,
          4125,
          1710,
          196,
          984,
          9847
        ],
        "name": "IndividuallyCappedCrowdsaleImpl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5217,
              "nodeType": "Block",
              "src": "356:64:67",
              "statements": []
            },
            "documentation": null,
            "id": 5218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5212,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5205,
                    "src": "335:4:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5213,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5207,
                    "src": "341:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5214,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5209,
                    "src": "349:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8082",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 5215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5211,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 984,
                  "src": "325:9:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$984_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "325:30:67"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5205,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "266:12:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5207,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "280:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:15:67",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5209,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5218,
                  "src": "304:12:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$8082",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5208,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8082,
                    "src": "304:6:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$8082",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:52:67"
            },
            "returnParameters": {
              "id": 5216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:67"
            },
            "scope": 5219,
            "src": "253:167:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5220,
        "src": "159:263:67"
      }
    ],
    "src": "0:423:67"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-02-25T17:39:18.824Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "getCap(address)": {
        "details": "Returns the cap of a specific beneficiary.",
        "params": {
          "beneficiary": "Address whose cap is to be checked"
        },
        "return": "Current cap for individual beneficiary"
      },
      "getContribution(address)": {
        "details": "Returns the amount contributed so far by a specific beneficiary.",
        "params": {
          "beneficiary": "Address of contributor"
        },
        "return": "Beneficiary contribution so far"
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "setCap(address,uint256)": {
        "details": "Sets a specific beneficiary's maximum contribution.",
        "params": {
          "beneficiary": "Address to be capped",
          "cap": "Wei limit for individual contribution"
        }
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}