{
  "contractName": "ERC721Mock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405261003f6301ffc9a77c01000000000000000000000000000000000000000000000000000000000261007f640100000000026401000000009004565b61007a6380ac58cd7c01000000000000000000000000000000000000000000000000000000000261007f640100000000026401000000009004565b61013c565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156100d057600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6114b88061014b6000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806342966c68116100a95780639dc29fac116100835780639dc29fac14610430578063a22cb4651461047e578063b88d4fde146104ce578063e985e9c5146105d3576100ec565b806342966c681461033c5780636352211e1461036a57806370a08231146103d8576100ec565b806301ffc9a7146100f1578063081812fc14610156578063095ea7b3146101c457806323b872dd1461021257806340c10f191461028057806342842e0e146102ce575b600080fd5b61013c6004803603602081101561010757600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061064f565b604051808215151515815260200191505060405180910390f35b6101826004803603602081101561016c57600080fd5b81019080803590602001909291905050506106b6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610210600480360360408110156101da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610707565b005b61027e6004803603606081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061084c565b005b6102cc6004803603604081101561029657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610871565b005b61033a600480360360608110156102e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087f565b005b6103686004803603602081101561035257600080fd5b81019080803590602001909291905050506108a0565b005b6103966004803603602081101561038057600080fd5b81019080803590602001909291905050506108ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a600480360360208110156103ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061092a565b6040518082815260200191505060405180910390f35b61047c6004803603604081101561044657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b5565b005b6104cc6004803603604081101561049457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506109c3565b005b6105d1600480360360808110156104e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561054b57600080fd5b82018360208201111561055d57600080fd5b8035906020019184600183028401116401000000008311171561057f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610aff565b005b610635600480360360408110156105e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b27565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006106c182610bbb565b15156106cc57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610712826108ac565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561074f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078f575061078e8133610b27565b5b151561079a57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108563382610c2d565b151561086157600080fd5b61086c838383610cc2565b505050565b61087b8282610e89565b5050565b61089b8383836020604051908101604052806000815250610aff565b505050565b6108a981610fd3565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561092157600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561096757600080fd5b6109ae600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610fe8565b9050919050565b6109bf8282610ff6565b5050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109fe57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610b0a84848461084c565b610b168484848461113b565b1515610b2157600080fd5b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080610c39836108ac565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ca857508373ffffffffffffffffffffffffffffffffffffffff16610c90846106b6565b73ffffffffffffffffffffffffffffffffffffffff16145b80610cb95750610cb88185610b27565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ce2826108ac565b73ffffffffffffffffffffffffffffffffffffffff16141515610d0457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d4057600080fd5b610d498161135e565b610d90600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061141e565b610dd7600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611441565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ec557600080fd5b610ece81610bbb565b151515610eda57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f73600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611441565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b610fe5610fdf826108ac565b82610ff6565b50565b600081600001549050919050565b8173ffffffffffffffffffffffffffffffffffffffff16611016826108ac565b73ffffffffffffffffffffffffffffffffffffffff1614151561103857600080fd5b6110418161135e565b611088600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061141e565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061115c8473ffffffffffffffffffffffffffffffffffffffff16611457565b151561116b5760019050611356565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611262578082015181840152602081019050611247565b50505050905090810190601f16801561128f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156112b157600080fd5b505af11580156112c5573d6000803e3d6000fd5b505050506040513d60208110156112db57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561141b5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6114366001826000015461146a90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b600082821115151561147b57600080fd5b60008284039050809150509291505056fea165627a7a72305820759985f536ce1ae876be164bcc75253703733df60820efae0f2fc2c8a304f39b0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806342966c68116100a95780639dc29fac116100835780639dc29fac14610430578063a22cb4651461047e578063b88d4fde146104ce578063e985e9c5146105d3576100ec565b806342966c681461033c5780636352211e1461036a57806370a08231146103d8576100ec565b806301ffc9a7146100f1578063081812fc14610156578063095ea7b3146101c457806323b872dd1461021257806340c10f191461028057806342842e0e146102ce575b600080fd5b61013c6004803603602081101561010757600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061064f565b604051808215151515815260200191505060405180910390f35b6101826004803603602081101561016c57600080fd5b81019080803590602001909291905050506106b6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610210600480360360408110156101da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610707565b005b61027e6004803603606081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061084c565b005b6102cc6004803603604081101561029657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610871565b005b61033a600480360360608110156102e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061087f565b005b6103686004803603602081101561035257600080fd5b81019080803590602001909291905050506108a0565b005b6103966004803603602081101561038057600080fd5b81019080803590602001909291905050506108ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a600480360360208110156103ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061092a565b6040518082815260200191505060405180910390f35b61047c6004803603604081101561044657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109b5565b005b6104cc6004803603604081101561049457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506109c3565b005b6105d1600480360360808110156104e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561054b57600080fd5b82018360208201111561055d57600080fd5b8035906020019184600183028401116401000000008311171561057f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610aff565b005b610635600480360360408110156105e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b27565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006106c182610bbb565b15156106cc57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610712826108ac565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561074f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078f575061078e8133610b27565b5b151561079a57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6108563382610c2d565b151561086157600080fd5b61086c838383610cc2565b505050565b61087b8282610e89565b5050565b61089b8383836020604051908101604052806000815250610aff565b505050565b6108a981610fd3565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561092157600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561096757600080fd5b6109ae600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610fe8565b9050919050565b6109bf8282610ff6565b5050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109fe57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610b0a84848461084c565b610b168484848461113b565b1515610b2157600080fd5b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080610c39836108ac565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ca857508373ffffffffffffffffffffffffffffffffffffffff16610c90846106b6565b73ffffffffffffffffffffffffffffffffffffffff16145b80610cb95750610cb88185610b27565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ce2826108ac565b73ffffffffffffffffffffffffffffffffffffffff16141515610d0457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d4057600080fd5b610d498161135e565b610d90600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061141e565b610dd7600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611441565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ec557600080fd5b610ece81610bbb565b151515610eda57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f73600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611441565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b610fe5610fdf826108ac565b82610ff6565b50565b600081600001549050919050565b8173ffffffffffffffffffffffffffffffffffffffff16611016826108ac565b73ffffffffffffffffffffffffffffffffffffffff1614151561103857600080fd5b6110418161135e565b611088600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061141e565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061115c8473ffffffffffffffffffffffffffffffffffffffff16611457565b151561116b5760019050611356565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611262578082015181840152602081019050611247565b50505050905090810190601f16801561128f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156112b157600080fd5b505af11580156112c5573d6000803e3d6000fd5b505050506040513d60208110156112db57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561141b5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6114366001826000015461146a90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b600082821115151561147b57600080fd5b60008284039050809150509291505056fea165627a7a72305820759985f536ce1ae876be164bcc75253703733df60820efae0f2fc2c8a304f39b0029",
  "sourceMap": "173:295:60:-;;;639:40:31;236:10;658:20;;639:18;;;:40;;;:::i;:::-;1992::110;1249:10;2011:20;;1992:18;;;:40;;;:::i;:::-;173:295:60;;989:158:31;1079:10;1064:25;;:11;:25;;;;;1056:34;;;;;;;;1136:4;1100:20;:33;1121:11;1100:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;989:158;:::o;173:295:60:-;;;;;;;",
  "deployedSourceMap": "173:295:60:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:295:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;777:133:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3795:151:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3795:151:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3218:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3218:292:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5351:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5351:180:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;209:85:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;209:85:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6164:132:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6164:132:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;397:69:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;397:69:60;;;;;;;;;;;;;;;;;:::i;:::-;;2620:177:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2620:177:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2242:160;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2242:160:110;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;300:91:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;300:91:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4238:213:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4238:213:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7001:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7001:211:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7001:211:110;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7001:211:110;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7001:211:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7001:211:110;;;;;;;;;;;;;;;:::i;:::-;;4772:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4772:145:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;777:133:31;847:4;870:20;:33;891:11;870:33;;;;;;;;;;;;;;;;;;;;;;;;;;;863:40;;777:133;;;:::o;3795:151:110:-;3854:7;3881:16;3889:7;3881;:16::i;:::-;3873:25;;;;;;;;3915:15;:24;3931:7;3915:24;;;;;;;;;;;;;;;;;;;;;3908:31;;3795:151;;;:::o;3218:292::-;3281:13;3297:16;3305:7;3297;:16::i;:::-;3281:32;;3337:5;3331:11;;:2;:11;;;;3323:20;;;;;;;;3375:5;3361:19;;:10;:19;;;:58;;;;3384:35;3401:5;3408:10;3384:16;:35::i;:::-;3361:58;3353:67;;;;;;;;3458:2;3431:15;:24;3447:7;3431:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3495:7;3491:2;3475:28;;3484:5;3475:28;;;;;;;;;;;;3218:292;;;:::o;5351:180::-;5441:39;5460:10;5472:7;5441:18;:39::i;:::-;5433:48;;;;;;;;5492:32;5506:4;5512:2;5516:7;5492:13;:32::i;:::-;5351:180;;;:::o;209:85:60:-;269:18;275:2;279:7;269:5;:18::i;:::-;209:85;;:::o;6164:132:110:-;6250:39;6267:4;6273:2;6277:7;6250:39;;;;;;;;;;;;;:16;:39::i;:::-;6164:132;;;:::o;397:69:60:-;445:14;451:7;445:5;:14::i;:::-;397:69;:::o;2620:177:110:-;2675:7;2694:13;2710:11;:20;2722:7;2710:20;;;;;;;;;;;;;;;;;;;;;2694:36;;2765:1;2748:19;;:5;:19;;;;2740:28;;;;;;;;2785:5;2778:12;;;2620:177;;;:::o;2242:160::-;2297:7;2341:1;2324:19;;:5;:19;;;;2316:28;;;;;;;;2361:34;:17;:24;2379:5;2361:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2354:41;;2242:160;;;:::o;300:91:60:-;363:21;369:5;376:7;363:5;:21::i;:::-;300:91;;:::o;4238:213:110:-;4323:10;4317:16;;:2;:16;;;;4309:25;;;;;;;;4381:8;4344:18;:30;4363:10;4344:30;;;;;;;;;;;;;;;:34;4375:2;4344:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4431:2;4404:40;;4419:10;4404:40;;;4435:8;4404:40;;;;;;;;;;;;;;;;;;;;;;4238:213;;:::o;7001:211::-;7107:31;7120:4;7126:2;7130:7;7107:12;:31::i;:::-;7156:48;7179:4;7185:2;7189:7;7198:5;7156:22;:48::i;:::-;7148:57;;;;;;;;7001:211;;;;:::o;4772:145::-;4852:4;4875:18;:25;4894:5;4875:25;;;;;;;;;;;;;;;:35;4901:8;4875:35;;;;;;;;;;;;;;;;;;;;;;;;;4868:42;;4772:145;;;;:::o;7406:152::-;7463:4;7479:13;7495:11;:20;7507:7;7495:20;;;;;;;;;;;;;;;;;;;;;7479:36;;7549:1;7532:19;;:5;:19;;;;7525:26;;;7406:152;;;:::o;7918:246::-;8003:4;8019:13;8035:16;8043:7;8035;:16::i;:::-;8019:32;;8080:5;8069:16;;:7;:16;;;:51;;;;8113:7;8089:31;;:20;8101:7;8089:11;:20::i;:::-;:31;;;8069:51;:87;;;;8124:32;8141:5;8148:7;8124:16;:32::i;:::-;8069:87;8061:96;;;7918:246;;;;:::o;9866:362::-;9979:4;9959:24;;:16;9967:7;9959;:16::i;:::-;:24;;;9951:33;;;;;;;;10016:1;10002:16;;:2;:16;;;;9994:25;;;;;;;;10030:23;10045:7;10030:14;:23::i;:::-;10064:35;:17;:23;10082:4;10064:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10109:33;:17;:21;10127:2;10109:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10176:2;10153:11;:20;10165:7;10153:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10213:7;10209:2;10194:27;;10203:4;10194:27;;;;;;;;;;;;9866:362;;;:::o;8407:259::-;8492:1;8478:16;;:2;:16;;;;8470:25;;;;;;;;8514:16;8522:7;8514;:16::i;:::-;8513:17;8505:26;;;;;;;;8565:2;8542:11;:20;8554:7;8542:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8577:33;:17;:21;8595:2;8577:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8651:7;8647:2;8626:33;;8643:1;8626:33;;;;;;;;;;;;8407:259;;:::o;9401:90::-;9452:32;9458:16;9466:7;9458;:16::i;:::-;9476:7;9452:5;:32::i;:::-;9401:90;:::o;1060:112:22:-;1125:7;1151;:14;;;1144:21;;1060:112;;;:::o;8939:283:110:-;9033:5;9013:25;;:16;9021:7;9013;:16::i;:::-;:25;;;9005:34;;;;;;;;9050:23;9065:7;9050:14;:23::i;:::-;9084:36;:17;:24;9102:5;9084:24;;;;;;;;;;;;;;;:34;:36::i;:::-;9161:1;9130:11;:20;9142:7;9130:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9207:7;9203:1;9179:36;;9188:5;9179:36;;;;;;;;;;;;8939:283;;:::o;10756:347::-;10877:4;10902:15;:2;:13;;;:15::i;:::-;10901:16;10897:58;;;10940:4;10933:11;;;;10897:58;10965:13;10997:2;10981:36;;;11018:10;11030:4;11036:7;11045:5;10981:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10981:70:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10981:70:110;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10981:70:110;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10981:70:110;;;;;;;;;;;;;;;;10965:86;;735:10;11079:16;;11069:26;;;:6;:26;;;;11061:35;;;10756:347;;;;;;;:::o;11264:171::-;11363:1;11327:38;;:15;:24;11343:7;11327:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11323:106;;;11416:1;11381:15;:24;11397:7;11381:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11323:106;11264:171;:::o;1273:108:22:-;1353:21;1372:1;1353:7;:14;;;:18;;:21;;;;:::i;:::-;1336:7;:14;;:38;;;;1273:108;:::o;1178:89::-;1259:1;1241:7;:14;;;:19;;;;;;;;;;;1178:89;:::o;463:616:124:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;1211:145:36:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"../token/ERC721/ERC721.sol\";\n\n/**\n * @title ERC721Mock\n * This mock just provides a public mint and burn functions for testing purposes\n */\ncontract ERC721Mock is ERC721 {\n    function mint(address to, uint256 tokenId) public {\n        _mint(to, tokenId);\n    }\n\n    function burn(address owner, uint256 tokenId) public {\n        _burn(owner, tokenId);\n    }\n\n    function burn(uint256 tokenId) public {\n        _burn(tokenId);\n    }\n}\n",
  "sourcePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/ERC721Mock.sol",
  "ast": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/ERC721Mock.sol",
    "exportedSymbols": {
      "ERC721Mock": [
        4757
      ]
    },
    "id": 4758,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4717,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:60"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 4718,
        "nodeType": "ImportDirective",
        "scope": 4758,
        "sourceUnit": 8872,
        "src": "25:36:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4719,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8871,
              "src": "196:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$8871",
                "typeString": "contract ERC721"
              }
            },
            "id": 4720,
            "nodeType": "InheritanceSpecifier",
            "src": "196:6:60"
          }
        ],
        "contractDependencies": [
          3508,
          3655,
          8871,
          9636
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Mock\nThis mock just provides a public mint and burn functions for testing purposes",
        "fullyImplemented": true,
        "id": 4757,
        "linearizedBaseContracts": [
          4757,
          8871,
          9636,
          3508,
          3655
        ],
        "name": "ERC721Mock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4732,
              "nodeType": "Block",
              "src": "259:35:60",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4728,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4722,
                        "src": "275:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4729,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4724,
                        "src": "279:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8698,
                      "src": "269:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:18:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4731,
                  "nodeType": "ExpressionStatement",
                  "src": "269:18:60"
                }
              ]
            },
            "documentation": null,
            "id": 4733,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4722,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4733,
                  "src": "223:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4724,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4733,
                  "src": "235:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:29:60"
            },
            "returnParameters": {
              "id": 4726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:60"
            },
            "scope": 4757,
            "src": "209:85:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4745,
              "nodeType": "Block",
              "src": "353:38:60",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4741,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "369:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4742,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4737,
                        "src": "376:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4740,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8740,
                        8753
                      ],
                      "referencedDeclaration": 8740,
                      "src": "363:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:21:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4744,
                  "nodeType": "ExpressionStatement",
                  "src": "363:21:60"
                }
              ]
            },
            "documentation": null,
            "id": 4746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4735,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "314:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4737,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "329:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:32:60"
            },
            "returnParameters": {
              "id": 4739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:60"
            },
            "scope": 4757,
            "src": "300:91:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4755,
              "nodeType": "Block",
              "src": "435:31:60",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4752,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4748,
                        "src": "451:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4751,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8740,
                        8753
                      ],
                      "referencedDeclaration": 8753,
                      "src": "445:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:14:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4754,
                  "nodeType": "ExpressionStatement",
                  "src": "445:14:60"
                }
              ]
            },
            "documentation": null,
            "id": 4756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4748,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4756,
                  "src": "411:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:17:60"
            },
            "returnParameters": {
              "id": 4750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:60"
            },
            "scope": 4757,
            "src": "397:69:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4758,
        "src": "173:295:60"
      }
    ],
    "src": "0:469:60"
  },
  "legacyAST": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/mocks/ERC721Mock.sol",
    "exportedSymbols": {
      "ERC721Mock": [
        4757
      ]
    },
    "id": 4758,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4717,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:60"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 4718,
        "nodeType": "ImportDirective",
        "scope": 4758,
        "sourceUnit": 8872,
        "src": "25:36:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4719,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8871,
              "src": "196:6:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$8871",
                "typeString": "contract ERC721"
              }
            },
            "id": 4720,
            "nodeType": "InheritanceSpecifier",
            "src": "196:6:60"
          }
        ],
        "contractDependencies": [
          3508,
          3655,
          8871,
          9636
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Mock\nThis mock just provides a public mint and burn functions for testing purposes",
        "fullyImplemented": true,
        "id": 4757,
        "linearizedBaseContracts": [
          4757,
          8871,
          9636,
          3508,
          3655
        ],
        "name": "ERC721Mock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4732,
              "nodeType": "Block",
              "src": "259:35:60",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4728,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4722,
                        "src": "275:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4729,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4724,
                        "src": "279:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8698,
                      "src": "269:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:18:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4731,
                  "nodeType": "ExpressionStatement",
                  "src": "269:18:60"
                }
              ]
            },
            "documentation": null,
            "id": 4733,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4722,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4733,
                  "src": "223:10:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4724,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4733,
                  "src": "235:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:29:60"
            },
            "returnParameters": {
              "id": 4726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:60"
            },
            "scope": 4757,
            "src": "209:85:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4745,
              "nodeType": "Block",
              "src": "353:38:60",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4741,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "369:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4742,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4737,
                        "src": "376:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4740,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8740,
                        8753
                      ],
                      "referencedDeclaration": 8740,
                      "src": "363:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:21:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4744,
                  "nodeType": "ExpressionStatement",
                  "src": "363:21:60"
                }
              ]
            },
            "documentation": null,
            "id": 4746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4735,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "314:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4737,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "329:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:32:60"
            },
            "returnParameters": {
              "id": 4739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:60"
            },
            "scope": 4757,
            "src": "300:91:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4755,
              "nodeType": "Block",
              "src": "435:31:60",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4752,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4748,
                        "src": "451:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4751,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8740,
                        8753
                      ],
                      "referencedDeclaration": 8753,
                      "src": "445:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:14:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4754,
                  "nodeType": "ExpressionStatement",
                  "src": "445:14:60"
                }
              ]
            },
            "documentation": null,
            "id": 4756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4748,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4756,
                  "src": "411:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:17:60"
            },
            "returnParameters": {
              "id": 4750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:60"
            },
            "scope": 4757,
            "src": "397:69:60",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4758,
        "src": "173:295:60"
      }
    ],
    "src": "0:469:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-02-25T17:39:18.821Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721Mock This mock just provides a public mint and burn functions for testing purposes"
  },
  "userdoc": {
    "methods": {}
  }
}