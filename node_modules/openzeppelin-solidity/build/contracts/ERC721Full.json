{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "404:227:113:-;;;474:155;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:155:113;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;474:155:113;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;474:155:113;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;474:155:113;;;;;;551:4;557:6;639:40:31;236:10;658:20;;639:18;;;:40;;;:::i;:::-;1992::110;1249:10;2011:20;;1992:18;;;:40;;;:::i;:::-;1239:51:112;855:10;1258:31;;1239:18;;;:51;;;:::i;:::-;745:4:115;737:5;:12;;;;;;;;;;;;:::i;:::-;;769:6;759:7;:16;;;;;;;;;;;;:::i;:::-;;863:49;428:10;882:29;;863:18;;;:49;;;:::i;:::-;665:254;;474:155:113;;404:227;;989:158:31;1079:10;1064:25;;:11;:25;;;;;1056:34;;;;;;;;1136:4;1100:20;:33;1121:11;1100:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;989:158;:::o;404:227:113:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "404:227:113:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:227:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;777:133:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1023:83:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1023:83:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3795:151:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3795:151:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3218:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3218:292:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2004:94:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5351:180:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5351:180:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1670:182:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1670:182:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6164:132:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6164:132:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2435:148:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2435:148:112;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2620:177:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2620:177:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2242:160;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2242:160:110;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1214:87:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1214:87:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4238:213:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4238:213:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7001:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7001:211:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7001:211:110;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7001:211:110;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7001:211:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7001:211:110;;;;;;;;;;;;;;;:::i;:::-;;1500:151:115;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1500:151:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1500:151:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4772:145:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4772:145:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;777:133:31;847:4;870:20;:33;891:11;870:33;;;;;;;;;;;;;;;;;;;;;;;;;;;863:40;;777:133;;;:::o;1023:83:115:-;1062:13;1094:5;1087:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:83;:::o;3795:151:110:-;3854:7;3881:16;3889:7;3881;:16::i;:::-;3873:25;;;;;;;;3915:15;:24;3931:7;3915:24;;;;;;;;;;;;;;;;;;;;;3908:31;;3795:151;;;:::o;3218:292::-;3281:13;3297:16;3305:7;3297;:16::i;:::-;3281:32;;3337:5;3331:11;;:2;:11;;;;3323:20;;;;;;;;3375:5;3361:19;;:10;:19;;;:58;;;;3384:35;3401:5;3408:10;3384:16;:35::i;:::-;3361:58;3353:67;;;;;;;;3458:2;3431:15;:24;3447:7;3431:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3495:7;3491:2;3475:28;;3484:5;3475:28;;;;;;;;;;;;3218:292;;;:::o;2004:94:112:-;2048:7;2074:10;:17;;;;2067:24;;2004:94;:::o;5351:180:110:-;5441:39;5460:10;5472:7;5441:18;:39::i;:::-;5433:48;;;;;;;;5492:32;5506:4;5512:2;5516:7;5492:13;:32::i;:::-;5351:180;;;:::o;1670:182:112:-;1750:7;1785:16;1795:5;1785:9;:16::i;:::-;1777:5;:24;1769:33;;;;;;;;1819:12;:19;1832:5;1819:19;;;;;;;;;;;;;;;1839:5;1819:26;;;;;;;;;;;;;;;;;;1812:33;;1670:182;;;;:::o;6164:132:110:-;6250:39;6267:4;6273:2;6277:7;6250:39;;;;;;;;;;;;;:16;:39::i;:::-;6164:132;;;:::o;2435:148:112:-;2493:7;2528:13;:11;:13::i;:::-;2520:5;:21;2512:30;;;;;;;;2559:10;2570:5;2559:17;;;;;;;;;;;;;;;;;;2552:24;;2435:148;;;:::o;2620:177:110:-;2675:7;2694:13;2710:11;:20;2722:7;2710:20;;;;;;;;;;;;;;;;;;;;;2694:36;;2765:1;2748:19;;:5;:19;;;;2740:28;;;;;;;;2785:5;2778:12;;;2620:177;;;:::o;2242:160::-;2297:7;2341:1;2324:19;;:5;:19;;;;2316:28;;;;;;;;2361:34;:17;:24;2379:5;2361:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2354:41;;2242:160;;;:::o;1214:87:115:-;1255:13;1287:7;1280:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:87;:::o;4238:213:110:-;4323:10;4317:16;;:2;:16;;;;4309:25;;;;;;;;4381:8;4344:18;:30;4363:10;4344:30;;;;;;;;;;;;;;;:34;4375:2;4344:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4431:2;4404:40;;4419:10;4404:40;;;4435:8;4404:40;;;;;;;;;;;;;;;;;;;;;;4238:213;;:::o;7001:211::-;7107:31;7120:4;7126:2;7130:7;7107:12;:31::i;:::-;7156:48;7179:4;7185:2;7189:7;7198:5;7156:22;:48::i;:::-;7148:57;;;;;;;;7001:211;;;;:::o;1500:151:115:-;1558:13;1591:16;1599:7;1591;:16::i;:::-;1583:25;;;;;;;;1625:10;:19;1636:7;1625:19;;;;;;;;;;;1618:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:151;;;:::o;4772:145:110:-;4852:4;4875:18;:25;4894:5;4875:25;;;;;;;;;;;;;;;:35;4901:8;4875:35;;;;;;;;;;;;;;;;;;;;;;;;;4868:42;;4772:145;;;;:::o;7406:152::-;7463:4;7479:13;7495:11;:20;7507:7;7495:20;;;;;;;;;;;;;;;;;;;;;7479:36;;7549:1;7532:19;;:5;:19;;;;7525:26;;;7406:152;;;:::o;7918:246::-;8003:4;8019:13;8035:16;8043:7;8035;:16::i;:::-;8019:32;;8080:5;8069:16;;:7;:16;;;:51;;;;8113:7;8089:31;;:20;8101:7;8089:11;:20::i;:::-;:31;;;8069:51;:87;;;;8124:32;8141:5;8148:7;8124:16;:32::i;:::-;8069:87;8061:96;;;7918:246;;;;:::o;2958:239:112:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;:::-;2958:239;;;:::o;1060:112:22:-;1125:7;1151;:14;;;1144:21;;1060:112;;;:::o;10756:347:110:-;10877:4;10902:15;:2;:13;;;:15::i;:::-;10901:16;10897:58;;;10940:4;10933:11;;;;10897:58;10965:13;10997:2;10981:36;;;11018:10;11030:4;11036:7;11045:5;10981:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10981:70:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10981:70:110;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10981:70:110;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10981:70:110;;;;;;;;;;;;;;;;10965:86;;735:10;11079:16;;11069:26;;;:6;:26;;;;11061:35;;;10756:347;;;;;;;:::o;9866:362::-;9979:4;9959:24;;:16;9967:7;9959;:16::i;:::-;:24;;;9951:33;;;;;;;;10016:1;10002:16;;:2;:16;;;;9994:25;;;;;;;;10030:23;10045:7;10030:14;:23::i;:::-;10064:35;:17;:23;10082:4;10064:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10109:33;:17;:21;10127:2;10109:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10176:2;10153:11;:20;10165:7;10153:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10213:7;10209:2;10194:27;;10203:4;10194:27;;;;;;;;;;;;9866:362;;;:::o;6060:1128:112:-;6322:22;6347:32;6377:1;6347:12;:18;6360:4;6347:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6322:57;;6389:18;6410:17;:26;6428:7;6410:26;;;;;;;;;;;;6389:47;;6554:14;6540:10;:28;;6536:323;;;6584:19;6606:12;:18;6619:4;6606:18;;;;;;;;;;;;;;;6625:14;6606:34;;;;;;;;;;;;;;;;;;6584:56;;6688:11;6655:12;:18;6668:4;6655:18;;;;;;;;;;;;;;;6674:10;6655:30;;;;;;;;;;;;;;;;;:44;;;;6804:10;6771:17;:30;6789:11;6771:30;;;;;;;;;;;:43;;;;6536:323;;6945:12;:18;6958:4;6945:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;5019:12;:16;5032:2;5019:16;;;;;;;;;;;;;;;:23;;;;4990:17;:26;5008:7;4990:26;;;;;;;;;;;:52;;;;5052:12;:16;5065:2;5052:16;;;;;;;;;;;;;;;5074:7;5052:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5052:30:112;;;;;;;;;;;;;;;;;;;;;;4906:183;;:::o;463:616:124:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;11264:171:110:-;11363:1;11327:38;;:15;:24;11343:7;11327:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11323:106;;;11416:1;11381:15;:24;11397:7;11381:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11323:106;11264:171;:::o;1273:108:22:-;1353:21;1372:1;1353:7;:14;;;:18;;:21;;;;:::i;:::-;1336:7;:14;;:38;;;;1273:108;:::o;1178:89::-;1259:1;1241:7;:14;;;:19;;;;;;;;;;;1178:89;:::o;1211:145:36:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;404:227:113:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        9254
      ]
    },
    "id": 9255,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9232,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:113"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 9233,
        "nodeType": "ImportDirective",
        "scope": 9255,
        "sourceUnit": 8872,
        "src": "25:22:113",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 9234,
        "nodeType": "ImportDirective",
        "scope": 9255,
        "sourceUnit": 9231,
        "src": "48:32:113",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 9235,
        "nodeType": "ImportDirective",
        "scope": 9255,
        "sourceUnit": 9406,
        "src": "81:30:113",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9236,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8871,
              "src": "427:6:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$8871",
                "typeString": "contract ERC721"
              }
            },
            "id": 9237,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:113"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9238,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9230,
              "src": "435:16:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$9230",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 9239,
            "nodeType": "InheritanceSpecifier",
            "src": "435:16:113"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9240,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9405,
              "src": "453:14:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$9405",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 9241,
            "nodeType": "InheritanceSpecifier",
            "src": "453:14:113"
          }
        ],
        "contractDependencies": [
          3508,
          3655,
          8871,
          9230,
          9405,
          9636,
          9663,
          9698
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 9254,
        "linearizedBaseContracts": [
          9254,
          9405,
          9698,
          9230,
          9663,
          8871,
          9636,
          3508,
          3655
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9252,
              "nodeType": "Block",
              "src": "565:64:113",
              "statements": []
            },
            "documentation": null,
            "id": 9253,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9248,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9243,
                    "src": "551:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 9249,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9245,
                    "src": "557:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 9250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9247,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9405,
                  "src": "536:14:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$9405_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "536:28:113"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9243,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9253,
                  "src": "487:18:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9245,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 9253,
                  "src": "507:20:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:42:113"
            },
            "returnParameters": {
              "id": 9251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:0:113"
            },
            "scope": 9254,
            "src": "474:155:113",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9255,
        "src": "404:227:113"
      }
    ],
    "src": "0:632:113"
  },
  "legacyAST": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        9254
      ]
    },
    "id": 9255,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9232,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:113"
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 9233,
        "nodeType": "ImportDirective",
        "scope": 9255,
        "sourceUnit": 8872,
        "src": "25:22:113",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 9234,
        "nodeType": "ImportDirective",
        "scope": 9255,
        "sourceUnit": 9231,
        "src": "48:32:113",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 9235,
        "nodeType": "ImportDirective",
        "scope": 9255,
        "sourceUnit": 9406,
        "src": "81:30:113",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9236,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8871,
              "src": "427:6:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$8871",
                "typeString": "contract ERC721"
              }
            },
            "id": 9237,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:113"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9238,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9230,
              "src": "435:16:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$9230",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 9239,
            "nodeType": "InheritanceSpecifier",
            "src": "435:16:113"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9240,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9405,
              "src": "453:14:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$9405",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 9241,
            "nodeType": "InheritanceSpecifier",
            "src": "453:14:113"
          }
        ],
        "contractDependencies": [
          3508,
          3655,
          8871,
          9230,
          9405,
          9636,
          9663,
          9698
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 9254,
        "linearizedBaseContracts": [
          9254,
          9405,
          9698,
          9230,
          9663,
          8871,
          9636,
          3508,
          3655
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9252,
              "nodeType": "Block",
              "src": "565:64:113",
              "statements": []
            },
            "documentation": null,
            "id": 9253,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9248,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9243,
                    "src": "551:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 9249,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9245,
                    "src": "557:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 9250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9247,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9405,
                  "src": "536:14:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$9405_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "536:28:113"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9243,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9253,
                  "src": "487:18:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9242,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9245,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 9253,
                  "src": "507:20:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9244,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:42:113"
            },
            "returnParameters": {
              "id": 9251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:0:113"
            },
            "scope": 9254,
            "src": "474:155:113",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9255,
        "src": "404:227:113"
      }
    ],
    "src": "0:632:113"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-02-25T17:39:18.856Z",
  "devdoc": {
    "details": "see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}